# spring.datasource.url=jdbc:h2:mem:mydb
# spring.datasource.url=jdbc:h2:mem:test;INIT=RUNSCRIPT FROM 'classpath:init.sql'
# spring.h2.console.enabled=true
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=password
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.hibernate.ddl-auto=none
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
# logging.level.org.springframework=TRACE 
# logging.level.com.agoda.exam=TRACE
password.maxlength=18
password.maxcount=4
# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/ACCOUNTS

# Username and password
spring.datasource.username = root
spring.datasource.password = 1234567890

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect